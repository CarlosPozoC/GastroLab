{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/forms\";\nclass CrearIngredienteComponent {\n  constructor(apiservice) {\n    this.apiservice = apiservice;\n  }\n  crearIngrediente(form) {\n    if (form.invalid) {\n      return;\n    }\n    const nombre = form.value.nombre;\n    const tipo = form.value.tipo;\n    const calorias = form.value.calorias;\n    const nuevoIngrediente = {\n      nombre: nombre,\n      tipo: tipo,\n      calorias: calorias\n    };\n    this.apiservice.crearIngrediente(nuevoIngrediente).subscribe(response => {\n      console.log(response);\n      // Realizar acciones adicionales después de crear el ingrediente si es necesario\n      form.resetForm(); // Reiniciar el formulario\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nCrearIngredienteComponent.ɵfac = function CrearIngredienteComponent_Factory(t) {\n  return new (t || CrearIngredienteComponent)(i0.ɵɵdirectiveInject(i1.apiservice));\n};\nCrearIngredienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CrearIngredienteComponent,\n  selectors: [[\"app-crear-ingrediente\"]],\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"id\", \"nombre\", \"name\", \"nombre\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"tipo\"], [\"type\", \"text\", \"id\", \"tipo\", \"name\", \"tipo\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"calorias\"], [\"type\", \"number\", \"id\", \"calorias\", \"name\", \"calorias\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function CrearIngredienteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Crear Ingrediente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CrearIngredienteComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.crearIngrediente(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Nombre:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Tipo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Calor\\u00EDas:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"button\", 10);\n      i0.ɵɵtext(19, \"Crear\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CrearIngredienteComponent };","map":{"version":3,"names":["CrearIngredienteComponent","constructor","apiservice","crearIngrediente","form","invalid","nombre","value","tipo","calorias","nuevoIngrediente","subscribe","response","console","log","resetForm","error","i0","ɵɵdirectiveInject","i1","selectors","decls","vars","consts","template","CrearIngredienteComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CrearIngredienteComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement"],"sources":["C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\crear-ingrediente\\crear-ingrediente.component.ts","C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\crear-ingrediente\\crear-ingrediente.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { apiservice } from '../apiservice.service';\nimport { Ingrediente } from '../interfaces/ingrediente.interface';\n\n@Component({\n  selector: 'app-crear-ingrediente',\n  templateUrl: './crear-ingrediente.component.html',\n  styleUrls: ['./crear-ingrediente.component.css']\n})\nexport class CrearIngredienteComponent {\n\n  constructor(private apiservice: apiservice) {}\n\n  crearIngrediente(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    const nombre = form.value.nombre;\n    const tipo = form.value.tipo;\n    const calorias = form.value.calorias;\n\n    const nuevoIngrediente: Ingrediente = {\n      nombre: nombre,\n      tipo: tipo,\n      calorias: calorias\n    };\n\n    this.apiservice.crearIngrediente(nuevoIngrediente).subscribe(\n      response => {\n        console.log(response);\n        // Realizar acciones adicionales después de crear el ingrediente si es necesario\n        form.resetForm(); // Reiniciar el formulario\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n  <h2>Crear Ingrediente</h2>\n  <form (ngSubmit)=\"crearIngrediente(form)\" #form=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"nombre\">Nombre:</label>\n      <input type=\"text\" id=\"nombre\" name=\"nombre\" ngModel required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"tipo\">Tipo:</label>\n      <input type=\"text\" id=\"tipo\" name=\"tipo\" ngModel required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"calorias\">Calorías:</label>\n      <input type=\"number\" id=\"calorias\" name=\"calorias\" ngModel required>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\">Crear</button>\n    </div>\n  </form>\n</div>\n\n"],"mappings":";;;AAKA,MAKaA,yBAAyB;EAEpCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,gBAAgBA,CAACC,IAAY;IAC3B,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChB;;IAGF,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAK,CAACD,MAAM;IAChC,MAAME,IAAI,GAAGJ,IAAI,CAACG,KAAK,CAACC,IAAI;IAC5B,MAAMC,QAAQ,GAAGL,IAAI,CAACG,KAAK,CAACE,QAAQ;IAEpC,MAAMC,gBAAgB,GAAgB;MACpCJ,MAAM,EAAEA,MAAM;MACdE,IAAI,EAAEA,IAAI;MACVC,QAAQ,EAAEA;KACX;IAED,IAAI,CAACP,UAAU,CAACC,gBAAgB,CAACO,gBAAgB,CAAC,CAACC,SAAS,CAC1DC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACAR,IAAI,CAACW,SAAS,EAAE,CAAC,CAAC;IACpB,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA7BWhB,yBAAyB,C;mBAAzBA,yBAAyB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAjB,UAAA;AAAA;AAAzBF,yBAAyB,C;QAAzBA,yBAAyB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCVtCT,EAAA,CAAAW,cAAA,aAAuB;MACjBX,EAAA,CAAAY,MAAA,wBAAiB;MAAAZ,EAAA,CAAAa,YAAA,EAAK;MAC1Bb,EAAA,CAAAW,cAAA,iBAAyD;MAAnDX,EAAA,CAAAc,UAAA,sBAAAC,4DAAA;QAAAf,EAAA,CAAAgB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAlB,EAAA,CAAAmB,WAAA;QAAA,OAAYnB,EAAA,CAAAoB,WAAA,CAAAV,GAAA,CAAAxB,gBAAA,CAAAgC,GAAA,CAAsB;MAAA,EAAC;MACvClB,EAAA,CAAAW,cAAA,aAAwB;MACFX,EAAA,CAAAY,MAAA,cAAO;MAAAZ,EAAA,CAAAa,YAAA,EAAQ;MACnCb,EAAA,CAAAqB,SAAA,eAA8D;MAChErB,EAAA,CAAAa,YAAA,EAAM;MACNb,EAAA,CAAAW,cAAA,aAAwB;MACJX,EAAA,CAAAY,MAAA,aAAK;MAAAZ,EAAA,CAAAa,YAAA,EAAQ;MAC/Bb,EAAA,CAAAqB,SAAA,gBAA0D;MAC5DrB,EAAA,CAAAa,YAAA,EAAM;MACNb,EAAA,CAAAW,cAAA,cAAwB;MACAX,EAAA,CAAAY,MAAA,sBAAS;MAAAZ,EAAA,CAAAa,YAAA,EAAQ;MACvCb,EAAA,CAAAqB,SAAA,gBAAoE;MACtErB,EAAA,CAAAa,YAAA,EAAM;MACNb,EAAA,CAAAW,cAAA,cAAwB;MACAX,EAAA,CAAAY,MAAA,aAAK;MAAAZ,EAAA,CAAAa,YAAA,EAAS;;;;;;SDN7B9B,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}