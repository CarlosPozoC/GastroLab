{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/cpozo/OneDrive/Escritorio/TFG/GastroLab/GastroLab/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { compareSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  loginUsuario(form) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (form.invalid) {\n        return;\n      }\n      const nombre = form.value.nombre;\n      const contraseña = form.value.contrasena;\n      try {\n        const response = yield _this.http.get('https://localhost:7271/api/GetUsuario?nombre=' + nombre).toPromise();\n        const usuarios = response || []; // Manejar el caso en que la respuesta sea undefined\n        if (usuarios.length > 0) {\n          const usuario = usuarios[0];\n          const contraseñaEncriptada = usuario.contrasena;\n          if (compareSync(contraseña, contraseñaEncriptada)) {\n            // Contraseña correcta, redirigir al componente TestpageComponent\n            _this.router.navigate(['/test-page']);\n          } else {\n            // Contraseña incorrecta\n            console.log('Contraseña incorrecta');\n          }\n        } else {\n          // No se encontró ningún usuario con ese nombre\n          console.log('Usuario no encontrado');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"id\", \"nombre\", \"name\", \"nombre\", \"placeholder\", \"Nombre\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"password\", \"id\", \"contrasena\", \"name\", \"contrasena\", \"placeholder\", \"Contrase\\u00F1a\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.loginUsuario(_r0));\n      });\n      i0.ɵɵelement(5, \"input\", 3)(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["compareSync","LoginComponent","constructor","http","router","loginUsuario","form","_this","_asyncToGenerator","invalid","nombre","value","contraseña","contrasena","response","get","toPromise","usuarios","length","usuario","contraseñaEncriptada","navigate","console","log","error","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement"],"sources":["C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\login\\login.component.ts","C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { compareSync, hashSync } from 'bcryptjs';\nimport { Usuario } from './usuario.interface';\nimport { Router } from '@angular/router';\n\ninterface Usuario {\n  id: number;\n  nombre: string;\n  contrasena: string;\n  sexo: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  async loginUsuario(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    const nombre = form.value.nombre;\n    const contraseña = form.value.contrasena;\n\n    try {\n      const response = await this.http.get<Usuario[]>('https://localhost:7271/api/GetUsuario?nombre=' + nombre).toPromise();\n      const usuarios: Usuario[] = response || []; // Manejar el caso en que la respuesta sea undefined\n\n      if (usuarios.length > 0) {\n        const usuario: Usuario = usuarios[0];\n        const contraseñaEncriptada: string = usuario.contrasena;\n\n        if (compareSync(contraseña, contraseñaEncriptada)) {\n          // Contraseña correcta, redirigir al componente TestpageComponent\n          this.router.navigate(['/test-page']);\n        } else {\n          // Contraseña incorrecta\n          console.log('Contraseña incorrecta');\n        }\n      } else {\n        // No se encontró ningún usuario con ese nombre\n        console.log('Usuario no encontrado');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"loginUsuario(f)\" #f=\"ngForm\">\n    <input type=\"text\" id=\"nombre\" name=\"nombre\" placeholder=\"Nombre\" ngModel required>\n    <input type=\"password\" id=\"contrasena\" name=\"contrasena\" placeholder=\"Contraseña\" ngModel required>\n    <button type=\"submit\">Iniciar sesión</button>\n  </form>\n</div>\n\n"],"mappings":";AAGA,SAASA,WAAW,QAAkB,UAAU;;;;;AAWhD,MAKaC,cAAc;EACzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEzDC,YAAYA,CAACC,IAAY;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC7B,IAAIF,IAAI,CAACG,OAAO,EAAE;QAChB;;MAGF,MAAMC,MAAM,GAAGJ,IAAI,CAACK,KAAK,CAACD,MAAM;MAChC,MAAME,UAAU,GAAGN,IAAI,CAACK,KAAK,CAACE,UAAU;MAExC,IAAI;QACF,MAAMC,QAAQ,SAASP,KAAI,CAACJ,IAAI,CAACY,GAAG,CAAY,+CAA+C,GAAGL,MAAM,CAAC,CAACM,SAAS,EAAE;QACrH,MAAMC,QAAQ,GAAcH,QAAQ,IAAI,EAAE,CAAC,CAAC;QAE5C,IAAIG,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvB,MAAMC,OAAO,GAAYF,QAAQ,CAAC,CAAC,CAAC;UACpC,MAAMG,oBAAoB,GAAWD,OAAO,CAACN,UAAU;UAEvD,IAAIb,WAAW,CAACY,UAAU,EAAEQ,oBAAoB,CAAC,EAAE;YACjD;YACAb,KAAI,CAACH,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;WACrC,MAAM;YACL;YACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;SAEvC,MAAM;UACL;UACAD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;OAEvC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;;IACnB;EACH;;AAjCWvB,cAAc,C;mBAAdA,cAAc,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAd7B,cAAc,C;QAAdA,cAAc;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCnB3BZ,EAAA,CAAAc,cAAA,aAAuB;MACjBd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACdhB,EAAA,CAAAc,cAAA,iBAA+C;MAAzCd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;QAAAlB,EAAA,CAAAmB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAArB,EAAA,CAAAsB,WAAA;QAAA,OAAYtB,EAAA,CAAAuB,WAAA,CAAAV,GAAA,CAAAjC,YAAA,CAAAyC,GAAA,CAAe;MAAA,EAAC;MAChCrB,EAAA,CAAAwB,SAAA,eAAmF;MAEnFxB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAe,MAAA,0BAAc;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;;;;SDcpCxC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}