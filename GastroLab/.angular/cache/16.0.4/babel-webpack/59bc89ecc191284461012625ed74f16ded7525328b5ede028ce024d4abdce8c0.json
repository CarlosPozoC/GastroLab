{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/cpozo/OneDrive/Escritorio/TFG/GastroLab/GastroLab/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { compareSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass LoginComponent {\n  constructor(apiservice, router) {\n    this.apiservice = apiservice;\n    this.router = router;\n  }\n  loginUsuario(form) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (form.invalid) {\n        return;\n      }\n      const nombre = form.value.nombre;\n      const contraseña = form.value.contrasena;\n      try {\n        const usuarios = yield _this.apiservice.obtenerUsuarios().toPromise();\n        const usuario = usuarios.find(u => u.nombre === nombre);\n        if (usuario) {\n          const contraseñaEncriptada = usuario.contrasena;\n          if (compareSync(contraseña, contraseñaEncriptada)) {\n            // Contraseña correcta, almacenar información del usuario logeado\n            _this.storeLoggedInUser(usuario);\n            // Redirigir al componente TestpageComponent\n            _this.router.navigate(['/test-page']);\n          } else {\n            // Contraseña incorrecta\n            console.log('Contraseña incorrecta');\n          }\n        } else {\n          // No se encontró ningún usuario con ese nombre\n          console.log('Usuario no encontrado');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n  storeLoggedInUser(user) {\n    // Almacena la información del usuario logeado en el localStorage\n    localStorage.setItem('loggedInUser', JSON.stringify(user));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.apiservice), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"id\", \"nombre\", \"name\", \"nombre\", \"placeholder\", \"Nombre\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"password\", \"id\", \"contrasena\", \"name\", \"contrasena\", \"placeholder\", \"Contrase\\u00F1a\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.loginUsuario(_r0));\n      });\n      i0.ɵɵelement(5, \"input\", 3)(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Iniciar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  width: 300px;\\r\\n  margin: 100px auto;\\r\\n  padding: 20px;\\r\\n  background-color: #f2f2f2;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\nh2[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n  margin-bottom: 10px;\\r\\n  padding: 8px;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px 20px;\\r\\n  background-color: #4caf50;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #45a049;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgbWFyZ2luOiAxMDBweCBhdXRvO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuaDIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["compareSync","LoginComponent","constructor","apiservice","router","loginUsuario","form","_this","_asyncToGenerator","invalid","nombre","value","contraseña","contrasena","usuarios","obtenerUsuarios","toPromise","usuario","find","u","contraseñaEncriptada","storeLoggedInUser","navigate","console","log","error","user","localStorage","setItem","JSON","stringify","i0","ɵɵdirectiveInject","i1","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement"],"sources":["C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\login\\login.component.ts","C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { apiservice } from '../apiservice.service';\nimport { compareSync } from 'bcryptjs';\nimport { Router } from '@angular/router';\n\ninterface Usuario {\n  id: number;\n  nombre: string;\n  contrasena: string;\n  sexo: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private apiservice: apiservice, private router: Router) {}\n\n  async loginUsuario(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    const nombre = form.value.nombre;\n    const contraseña = form.value.contrasena;\n\n    try {\n      const usuarios: Usuario[] = await this.apiservice.obtenerUsuarios().toPromise();\n      const usuario = usuarios.find(u => u.nombre === nombre);\n\n      if (usuario) {\n        const contraseñaEncriptada: string = usuario.contrasena;\n\n        if (compareSync(contraseña, contraseñaEncriptada)) {\n          // Contraseña correcta, almacenar información del usuario logeado\n          this.storeLoggedInUser(usuario);\n\n          // Redirigir al componente TestpageComponent\n          this.router.navigate(['/test-page']);\n        } else {\n          // Contraseña incorrecta\n          console.log('Contraseña incorrecta');\n        }\n      } else {\n        // No se encontró ningún usuario con ese nombre\n        console.log('Usuario no encontrado');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private storeLoggedInUser(user: Usuario): void {\n    // Almacena la información del usuario logeado en el localStorage\n    localStorage.setItem('loggedInUser', JSON.stringify(user));\n  }\n}\n","<div class=\"container\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"loginUsuario(f)\" #f=\"ngForm\">\n    <input type=\"text\" id=\"nombre\" name=\"nombre\" placeholder=\"Nombre\" ngModel required>\n    <input type=\"password\" id=\"contrasena\" name=\"contrasena\" placeholder=\"Contraseña\" ngModel required>\n    <button type=\"submit\">Iniciar sesión</button>\n  </form>\n</div>\n\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,UAAU;;;;;AAUtC,MAKaC,cAAc;EACzBC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,YAAYA,CAACC,IAAY;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC7B,IAAIF,IAAI,CAACG,OAAO,EAAE;QAChB;;MAGF,MAAMC,MAAM,GAAGJ,IAAI,CAACK,KAAK,CAACD,MAAM;MAChC,MAAME,UAAU,GAAGN,IAAI,CAACK,KAAK,CAACE,UAAU;MAExC,IAAI;QACF,MAAMC,QAAQ,SAAoBP,KAAI,CAACJ,UAAU,CAACY,eAAe,EAAE,CAACC,SAAS,EAAE;QAC/E,MAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,MAAM,KAAKA,MAAM,CAAC;QAEvD,IAAIO,OAAO,EAAE;UACX,MAAMG,oBAAoB,GAAWH,OAAO,CAACJ,UAAU;UAEvD,IAAIb,WAAW,CAACY,UAAU,EAAEQ,oBAAoB,CAAC,EAAE;YACjD;YACAb,KAAI,CAACc,iBAAiB,CAACJ,OAAO,CAAC;YAE/B;YACAV,KAAI,CAACH,MAAM,CAACkB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;WACrC,MAAM;YACL;YACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;SAEvC,MAAM;UACL;UACAD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;OAEvC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;;IACnB;EACH;EAEQJ,iBAAiBA,CAACK,IAAa;IACrC;IACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAC5D;;AAxCWzB,cAAc,C;mBAAdA,cAAc,EAAA8B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAA9B,UAAA,GAAA4B,EAAA,CAAAC,iBAAA,CAAAE,EAAA,CAAAC,MAAA;AAAA;AAAdlC,cAAc,C;QAAdA,cAAc;EAAAmC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MClB3BX,EAAA,CAAAa,cAAA,aAAuB;MACjBb,EAAA,CAAAc,MAAA,YAAK;MAAAd,EAAA,CAAAe,YAAA,EAAK;MACdf,EAAA,CAAAa,cAAA,iBAA+C;MAAzCb,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;QAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAApB,EAAA,CAAAqB,WAAA;QAAA,OAAYrB,EAAA,CAAAsB,WAAA,CAAAV,GAAA,CAAAtC,YAAA,CAAA8C,GAAA,CAAe;MAAA,EAAC;MAChCpB,EAAA,CAAAuB,SAAA,eAAmF;MAEnFvB,EAAA,CAAAa,cAAA,gBAAsB;MAAAb,EAAA,CAAAc,MAAA,0BAAc;MAAAd,EAAA,CAAAe,YAAA,EAAS;;;;;;SDapC7C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}