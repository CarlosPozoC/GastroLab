{"ast":null,"code":"import { TestpageComponent } from './testpage/testpage.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// Importa otros componentes si es necesario\nconst routes = [{\n  path: 'login',\n  component: LoginComponent\n}\n// Otras rutas de tu aplicación\n];\n\nclass AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(routes) // Asegúrate de que AppRoutingModule esté importado aquí\n  ]\n});\n\nexport { AppModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, TestpageComponent, RegisterComponent, LoginComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["TestpageComponent","BrowserModule","AppRoutingModule","AppComponent","HttpClientModule","RegisterComponent","FormsModule","ReactiveFormsModule","LoginComponent","RouterModule","routes","path","component","AppModule","bootstrap","forRoot","declarations","imports","i1"],"sources":["C:\\Users\\cpozo\\OneDrive\\Escritorio\\TFG\\GastroLab\\GastroLab\\src\\app\\app.module.ts"],"sourcesContent":["import { TestpageComponent } from './testpage/testpage.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Importa otros componentes si es necesario\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  // Otras rutas de tu aplicación\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestpageComponent,\n    RegisterComponent,\n    LoginComponent,\n    // Agrega otros componentes aquí si es necesario\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes) // Asegúrate de que AppRoutingModule esté importado aquí\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,+BAA+B;AAEjE,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,YAAY,QAAgB,iBAAiB;;;AAEtD;AACA,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEJ;AAAc;AAC1C;AAAA,CACD;;AAED,MAmBaK,SAAS;AAATA,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;QAATA,SAAS;EAAAC,SAAA,GAFRX,YAAY;AAAA;AAEbU,SAAS,C;YAVlBZ,aAAa,EACbC,gBAAgB,EAChBE,gBAAgB,EAChBE,WAAW,EACXC,mBAAmB,EACnBE,YAAY,CAACM,OAAO,CAACL,MAAM,CAAC,CAAC;EAAA;;;SAKpBG,SAAS;;2EAATA,SAAS;IAAAG,YAAA,GAjBlBb,YAAY,EACZH,iBAAiB,EACjBK,iBAAiB,EACjBG,cAAc;IAAAS,OAAA,GAIdhB,aAAa,EACbC,gBAAgB,EAChBE,gBAAgB,EAChBE,WAAW,EACXC,mBAAmB,EAAAW,EAAA,CAAAT,YAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}