// <auto-generated />
using GastroLabApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GastroLabApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230618142950_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GastroLabApp.Models.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calorias")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("GastroLabApp.Models.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recetaId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("recetaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("GastroLabApp.Models.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("GastroLabApp.Models.RecetaIngrediente", b =>
                {
                    b.Property<int>("RecetaId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.HasKey("RecetaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("RecetasIngredientes");
                });

            modelBuilder.Entity("GastroLabApp.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GastroLabApp.Models.Valoracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.Property<int>("recetaId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("recetaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Valoraciones");
                });

            modelBuilder.Entity("GastroLabApp.Models.Opinion", b =>
                {
                    b.HasOne("GastroLabApp.Models.Receta", "receta")
                        .WithMany("Opiniones")
                        .HasForeignKey("recetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastroLabApp.Models.Usuario", "usuario")
                        .WithMany("Opiniones")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("receta");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GastroLabApp.Models.Receta", b =>
                {
                    b.HasOne("GastroLabApp.Models.Usuario", "Usuario")
                        .WithMany("Recetas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastroLabApp.Models.RecetaIngrediente", b =>
                {
                    b.HasOne("GastroLabApp.Models.Ingrediente", "Ingrediente")
                        .WithMany("RecetasIngrediente")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastroLabApp.Models.Receta", "Receta")
                        .WithMany("IngredientesReceta")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("GastroLabApp.Models.Valoracion", b =>
                {
                    b.HasOne("GastroLabApp.Models.Receta", "receta")
                        .WithMany("Valoraciones")
                        .HasForeignKey("recetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastroLabApp.Models.Usuario", "usuario")
                        .WithMany("Valoraciones")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("receta");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("GastroLabApp.Models.Ingrediente", b =>
                {
                    b.Navigation("RecetasIngrediente");
                });

            modelBuilder.Entity("GastroLabApp.Models.Receta", b =>
                {
                    b.Navigation("IngredientesReceta");

                    b.Navigation("Opiniones");

                    b.Navigation("Valoraciones");
                });

            modelBuilder.Entity("GastroLabApp.Models.Usuario", b =>
                {
                    b.Navigation("Opiniones");

                    b.Navigation("Recetas");

                    b.Navigation("Valoraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
